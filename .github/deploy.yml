
name: Ping Server

on:
  schedule:
    - cron: "*/14 * * * *"
  workflow_dispatch:

jobs: 
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Ping Server
        run: curl https://ecoclassify.onrender.com/ping

name: Deploy Backend + Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Trigger workflow when you push to main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      backend_url: ${{ steps.set-url.outputs.backend_url }}
    steps:
      - name: Trigger Render Backend Deploy
        id: set-url
        run: |
          echo "backend_url=https://api.render.com/v1/services/YOUR_SERVICE_ID/deploys" >> $GITHUB_OUTPUT
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

      - name: Wait for Backend to Be Live
        run: |
          MAX_RETRIES=60
          SLEEP_INTERVAL=10
          for i in $(seq 1 $MAX_RETRIES); do
            STATUS=$(curl -s https://api.render.com/v1/services/YOUR_SERVICE_ID/deploys \
                     -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                     | jq -r '.[0].status')
            echo "Attempt $i: Status=$STATUS"
            if [[ "$STATUS" == "live" ]]; then
              echo "Backend is live!"
              exit 0
            fi
            sleep $SLEEP_INTERVAL
          done
          echo "Timed out waiting for backend"
          exit 1

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Deploy Frontend to Vercel
        run: |
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm
          echo "Frontend deployed successfully!"